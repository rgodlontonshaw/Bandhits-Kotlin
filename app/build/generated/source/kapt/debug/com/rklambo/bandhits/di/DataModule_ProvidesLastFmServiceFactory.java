// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.di;

import com.rklambo.bandhits.data.lastfm.LastFmService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class DataModule_ProvidesLastFmServiceFactory implements Factory<LastFmService> {
  private final DataModule module;

  private final Provider<Retrofit> retrofitProvider;

  public DataModule_ProvidesLastFmServiceFactory(
      DataModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public LastFmService get() {
    return Preconditions.checkNotNull(
        module.providesLastFmService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static DataModule_ProvidesLastFmServiceFactory create(
      DataModule module, Provider<Retrofit> retrofitProvider) {
    return new DataModule_ProvidesLastFmServiceFactory(module, retrofitProvider);
  }

  public static LastFmService proxyProvidesLastFmService(DataModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.providesLastFmService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
