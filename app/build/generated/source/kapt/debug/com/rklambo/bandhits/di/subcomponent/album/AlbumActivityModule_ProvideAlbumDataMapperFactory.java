// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.di.subcomponent.album;

import com.rklambo.bandhits.ui.entity.mapper.AlbumDetailDataMapper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AlbumActivityModule_ProvideAlbumDataMapperFactory
    implements Factory<AlbumDetailDataMapper> {
  private final AlbumActivityModule module;

  public AlbumActivityModule_ProvideAlbumDataMapperFactory(AlbumActivityModule module) {
    this.module = module;
  }

  @Override
  public AlbumDetailDataMapper get() {
    return Preconditions.checkNotNull(
        module.provideAlbumDataMapper(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AlbumActivityModule_ProvideAlbumDataMapperFactory create(
      AlbumActivityModule module) {
    return new AlbumActivityModule_ProvideAlbumDataMapperFactory(module);
  }

  public static AlbumDetailDataMapper proxyProvideAlbumDataMapper(AlbumActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideAlbumDataMapper(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
