// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.di.subcomponent.detail;

import com.rklambo.bandhits.ui.view.ArtistView;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ArtistActivityModule_ProvideArtistViewFactory implements Factory<ArtistView> {
  private final ArtistActivityModule module;

  public ArtistActivityModule_ProvideArtistViewFactory(ArtistActivityModule module) {
    this.module = module;
  }

  @Override
  public ArtistView get() {
    return Preconditions.checkNotNull(
        module.provideArtistView(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ArtistActivityModule_ProvideArtistViewFactory create(ArtistActivityModule module) {
    return new ArtistActivityModule_ProvideArtistViewFactory(module);
  }

  public static ArtistView proxyProvideArtistView(ArtistActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideArtistView(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
