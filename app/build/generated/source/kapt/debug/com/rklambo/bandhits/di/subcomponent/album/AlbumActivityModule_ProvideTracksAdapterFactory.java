// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.di.subcomponent.album;

import com.rklambo.bandhits.ui.adapter.TracksAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AlbumActivityModule_ProvideTracksAdapterFactory
    implements Factory<TracksAdapter> {
  private final AlbumActivityModule module;

  public AlbumActivityModule_ProvideTracksAdapterFactory(AlbumActivityModule module) {
    this.module = module;
  }

  @Override
  public TracksAdapter get() {
    return Preconditions.checkNotNull(
        module.provideTracksAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AlbumActivityModule_ProvideTracksAdapterFactory create(AlbumActivityModule module) {
    return new AlbumActivityModule_ProvideTracksAdapterFactory(module);
  }

  public static TracksAdapter proxyProvideTracksAdapter(AlbumActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideTracksAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
