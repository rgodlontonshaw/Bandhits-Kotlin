// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.ui.screens.album;

import android.support.v7.widget.LinearLayoutManager;
import com.rklambo.bandhits.ui.adapter.TracksAdapter;
import com.rklambo.bandhits.ui.entity.mapper.TrackDataMapper;
import com.rklambo.bandhits.ui.presenter.AlbumPresenter;
import com.squareup.picasso.Picasso;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class AlbumActivity_MembersInjector implements MembersInjector<AlbumActivity> {
  private final Provider<AlbumPresenter> presenterProvider;

  private final Provider<TrackDataMapper> trackDataMapperProvider;

  private final Provider<TracksAdapter> adapterProvider;

  private final Provider<LinearLayoutManager> layoutManagerProvider;

  private final Provider<Picasso> picassoProvider;

  public AlbumActivity_MembersInjector(
      Provider<AlbumPresenter> presenterProvider,
      Provider<TrackDataMapper> trackDataMapperProvider,
      Provider<TracksAdapter> adapterProvider,
      Provider<LinearLayoutManager> layoutManagerProvider,
      Provider<Picasso> picassoProvider) {
    this.presenterProvider = presenterProvider;
    this.trackDataMapperProvider = trackDataMapperProvider;
    this.adapterProvider = adapterProvider;
    this.layoutManagerProvider = layoutManagerProvider;
    this.picassoProvider = picassoProvider;
  }

  public static MembersInjector<AlbumActivity> create(
      Provider<AlbumPresenter> presenterProvider,
      Provider<TrackDataMapper> trackDataMapperProvider,
      Provider<TracksAdapter> adapterProvider,
      Provider<LinearLayoutManager> layoutManagerProvider,
      Provider<Picasso> picassoProvider) {
    return new AlbumActivity_MembersInjector(
        presenterProvider,
        trackDataMapperProvider,
        adapterProvider,
        layoutManagerProvider,
        picassoProvider);
  }

  @Override
  public void injectMembers(AlbumActivity instance) {
    injectPresenter(instance, presenterProvider.get());
    injectTrackDataMapper(instance, trackDataMapperProvider.get());
    injectAdapter(instance, adapterProvider.get());
    injectLayoutManager(instance, layoutManagerProvider.get());
    injectPicasso(instance, picassoProvider.get());
  }

  public static void injectPresenter(AlbumActivity instance, AlbumPresenter presenter) {
    instance.presenter = presenter;
  }

  public static void injectTrackDataMapper(
      AlbumActivity instance, TrackDataMapper trackDataMapper) {
    instance.trackDataMapper = trackDataMapper;
  }

  public static void injectAdapter(AlbumActivity instance, TracksAdapter adapter) {
    instance.adapter = adapter;
  }

  public static void injectLayoutManager(
      AlbumActivity instance, LinearLayoutManager layoutManager) {
    instance.layoutManager = layoutManager;
  }

  public static void injectPicasso(AlbumActivity instance, Picasso picasso) {
    instance.picasso = picasso;
  }
}
