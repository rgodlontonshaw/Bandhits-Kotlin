// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.di.subcomponent.album;

import com.rklambo.bandhits.ui.entity.mapper.TrackDataMapper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AlbumActivityModule_ProvideTrackDataMapperFactory
    implements Factory<TrackDataMapper> {
  private final AlbumActivityModule module;

  public AlbumActivityModule_ProvideTrackDataMapperFactory(AlbumActivityModule module) {
    this.module = module;
  }

  @Override
  public TrackDataMapper get() {
    return Preconditions.checkNotNull(
        module.provideTrackDataMapper(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AlbumActivityModule_ProvideTrackDataMapperFactory create(
      AlbumActivityModule module) {
    return new AlbumActivityModule_ProvideTrackDataMapperFactory(module);
  }

  public static TrackDataMapper proxyProvideTrackDataMapper(AlbumActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideTrackDataMapper(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
