// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.di.subcomponent.album;

import com.rklambo.bandhits.ui.view.AlbumView;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AlbumActivityModule_ProvideAlbumViewFactory implements Factory<AlbumView> {
  private final AlbumActivityModule module;

  public AlbumActivityModule_ProvideAlbumViewFactory(AlbumActivityModule module) {
    this.module = module;
  }

  @Override
  public AlbumView get() {
    return Preconditions.checkNotNull(
        module.provideAlbumView(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AlbumActivityModule_ProvideAlbumViewFactory create(AlbumActivityModule module) {
    return new AlbumActivityModule_ProvideAlbumViewFactory(module);
  }

  public static AlbumView proxyProvideAlbumView(AlbumActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideAlbumView(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
