// Generated by Dagger (https://google.github.io/dagger).
package com.rklambo.bandhits.di.subcomponent.main;

import com.rklambo.bandhits.ui.view.MainView;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MainActivityModule_ProvideMainViewFactory implements Factory<MainView> {
  private final MainActivityModule module;

  public MainActivityModule_ProvideMainViewFactory(MainActivityModule module) {
    this.module = module;
  }

  @Override
  public MainView get() {
    return Preconditions.checkNotNull(
        module.provideMainView(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static MainActivityModule_ProvideMainViewFactory create(MainActivityModule module) {
    return new MainActivityModule_ProvideMainViewFactory(module);
  }

  public static MainView proxyProvideMainView(MainActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideMainView(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
